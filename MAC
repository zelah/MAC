#include<stdio.h>
#include<stdlib.h>
#include<time.h>
 
#define AD(x,y) x=x+y
#define B2(r,t,a,c) r=t##b2(a,&t##c)
#define DV(x,y) x=x/y
#define HW VOhw()
#define HV(x) x=x/2
#define KP(a,t,f) t##kp(a,&t##f)
#define MP(a,t,f) t##mp(a,&t##f)
#define MU(x,y) x=x*y
#define PP(l,t) l=t##pp(l)
#define PS(l,t,v) l=t##ps(v,l)
#define RD(r,t,f,a,c) r=t##rd(f,a,&t##c);
#define RR(a,t,s) P(a,t);a=t##rr(s)
#define SB(x,y) x=x-y
#define SQ(x) x=x*x
#define TW(x) x=x+x
 
#define PROFILE srand(time(NULL))
//put PROFILE; at the top of main()
#define PRO(s) PRO1(s)
//put PRO("functionName"); in every function
//PRO0(s) profiling off
//PRO1(s) profiling on
//PRO2(s) verbose halting
#define PRO0(s)
#define PRO1(s) {int r=rand()/(RAND_MAX/PRO3);if(r==0){printf(" :%s ",s);fflush(stdout);}}
#define PRO2(s) {time_t t=time(NULL);int r=rand()/(RAND_MAX/PRO3);fflush(stdout);printf(" :%s%3d ",s,(char)(t%100));fflush(stdout);printf("%c",1/r);}
#define PRO3 255
//raise number to decrease sampling frequency
 
#define ND(t) typedef struct next {t v;struct next*n;} t##ND;
 
#define F1(n,t) t (*n)(t)
#define F2(n,t) t (*n)(t,t)
#define L(n,t) t##ND *n
#define LI(n,t) L(n,t);n=NULL
#define P(n,t) t *n
 
#define AD0(t) t t##ad(t x,t y);
#define AD1(t) t t##ad(t x,t y){PRO("AD");return x+y;}
#define B20(t) t t##b2(P(a,t),F2(c,t));L(t##b21,t)(L(l,t),F2(c,t));L(t##b22,t)(L(l,t),F2(c,t));
#define B21(t) t t##b2(P(a,t),F2(c,t)){t r;LI(l,t);t i;for(i=a[0];i>0;--i){PS(l,t,a[i]);}l=t##b21(l,c);r=l->v;PP(l,t);return r;}L(t##b21,t)(L(l,t),F2(c,t)){if(l->n==NULL){return l;}else{return t##b21(t##b22(l,c),c);}}L(t##b22,t)(L(l,t),F2(c,t)){if((l==NULL)||(l->n==NULL)){return l;}else{t r=(*c)(l->v,l->n->v);PP(l,t);PP(l,t);l=t##b22(l,c);PS(l,t,r);return l;}}
#define HW0 void VOhw();
#define HW1 void VOhw(){PRO("HW");}
#define INC0(t) t t##inc(t n);
#define INC1(t) t t##inc(t n){PRO("INC");return n+1;}
#define KP0(t) P(t##kp,t)(P(a,t),F1(f,t));
#define KP1(t) P(t##kp,t)(P(a,t),F1(f,t)){LI(l,t);t i;t c=0;for(i=a[0];i>0;--i){if((*f)(a[i])){PS(l,t,a[i]);++c;}}a[0]=c;for(i=1;i<=c;++i){a[i]=l->v;PP(l,t);}PRO("KP");return a;}
#define MP0(t) P(t##mp,t)(P(a,t),F1(f,t));
#define MP1(t) P(t##mp,t)(P(a,t),F1(f,t)){t i;for(i=a[0];i>0;--i){a[i]=(*f)(a[i]);}PRO("MP");return a;}
#define PP0(t) L(t##pp,t)(t##ND *l);
#define PP1(t) L(t##pp,t)(t##ND *l){t##ND *r;r=l->n;free(l);PRO("PP");return r;}
#define PS0(t) L(t##ps,t)(t v,t##ND *l);
#define PS1(t) L(t##ps,t)(t v,t##ND *l){LI(r,t);r=(t##ND*)malloc(sizeof(t##ND));r->v=v;r->n=l;return r;}
#define RD0(t) t t##rd(t f,t *a,F2(c,t));
#define RD1(t) t t##rd(t f,t *a,F2(c,t)){t p;a[a[0]]=(*c)(a[a[0]],f);for(p=a[0]-1;p>0;--p){a[p]=(*c)(a[p],a[p+1]);}PRO("RD");return a[1];}
#define RR0(t) P(t##rr,t)(t s);
#define RR1(t) P(t##rr,t)(t s){P(a,t);a=(t*)malloc((s+1)*sizeof(t));a[0]=s;PRO("RR");return a;}
 
typedef char CH;
typedef unsigned char UC;
typedef signed char SC;
typedef short SH;
typedef unsigned short US;
typedef signed short SS;
typedef int IN;
typedef unsigned int UI;
typedef signed int SI;
typedef long LO;
typedef unsigned long LU;
typedef signed long LS;
typedef long long LL;
typedef unsigned long long UL;
typedef signed long long SL;
typedef float FL;
typedef double DB;
typedef long double LD;
ND(UC)
 
 
 
HW0
 
MP0(UC)
 
INC0(UC)
 
RR0(UC)
 
PS0(UC)
 
AD0(UC)
 
RD0(UC)
 
PP0(UC)
 
KP0(UC)
 
B20(UC)
 
B21(UC)
 
KP1(UC)
 
PP1(UC)
 
RD1(UC)
 
AD1(UC)
 
PS1(UC)
 
RR1(UC)
 
INC1(UC)
 
MP1(UC)
 
HW1
 
 
 
int main()
{
  PROFILE;
  UL j;
  for(j=1;j<99;++j)
  {
    DB x=1.000001;
    UL i;
    HW;
    for(i=1;i<9999999;++i)
    {
      if(x>2){x/=2;}
      SQ(x);
    }
    printf("%f",x);
    RR(a,UC,3);
    a[1]='H';
    a[2]='A';
    a[3]='L';
    MP(a,UC,inc);
    KP(a,UC,inc);
    printf(" %c%c%c ",a[1],a[2],a[3]);
    LI(list,UC);
    PS(list,UC,'Z');
    printf(" %c ",list->v);
    UC u;
    a[1]=1;
    a[2]=2;
    a[3]=3;
    B2(u,UC,a,ad);
    printf(" %d ",u);
    free(a);
    PP(list,UC);
    printf("\n\n");
  }
  return 0;
}
