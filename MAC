#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>
 
#define AD(x,y) PRO("AD");x+=y
#define B2(r,t,a,c) r=t##b2(a,&t##c)
#define DV(x,y) PRO("DV");x/=y
#define HV(x) PRO("HV");x/=2
#define HW VOhw()
#define KP(a,t,f) t##kp(a,&t##f)
#define MP(a,t,f) t##mp(a,&t##f)
#define MU(x,y) PRO("MU");x*=y
#define PP(l,t) l=t##pp(l)
#define PS(l,t,v) l=t##ps(v,l)
#define RD(r,t,f,a,c) r=t##rd(f,a,&t##c);
#define RR(a,t,s) P(a,t);a=t##rr(s)
#define SB(x,y) PRO("SB");x-=y
#define SQ(x) PRO("SQ");x*=x
#define TW(x) PRO("TW");x*=2
 
#define PROFILE PROSEEN=NULL;srand(time(NULL))
//put PROFILE; at the top of main()
#define PRO(s) PRO1(s)
//put PRO("functionName"); in every function
//#define PRO(s) PRO0(s)
//profiling off
//#define PRO(s) PRO1(s)
//profiling on
//#define PRO(s) PRO2(s) 
//verbose halting
#define PRO0(s)
#define PRO1(s) {int r=rand()/(RAND_MAX/PRO3);if(r==0){L(q,CHP);q=PROSEEN;while((q!=NULL)&&(strcmp(q->v,s))){q=q->n;}if(q==NULL){LI(t,CHP);t=(CHPND*)malloc(sizeof(CHPND));t->v=s;t->n=PROSEEN;PROSEEN=t;printf(" :%s ",s);fflush(stdout);}}}
#define PRO2(s) {time_t t=time(NULL);int r=rand()/(RAND_MAX/PRO3);if(PROSTART){if(PROSTART==PRO4){PROSTART=0;}printf(" %d:%s ",(char)(t%100),s);fflush(stdout);printf("%c",1/PROSTART);++PROSTART;}if(r){;}else{PROSTART=1;}}
#define PRO3 333
//raise number to decrease sampling frequency
#define PRO4 1024
//adjust window size for use with PRO2
 
#define ND(t) typedef struct t##N {t v;struct t##N*n;} t##ND;
 
#define F1(n,t) t (*n)(t)
#define F2(n,t) t (*n)(t,t)
#define L(n,t) t##ND *n
#define LI(n,t) L(n,t);n=NULL
#define P(n,t) t *n
 
#define AD0(t) t t##ad(t x,t y);
#define AD1(t) t t##ad(t x,t y){PRO("AD");return x+y;}
#define B2a(t) t t##b2(P(a,t),F2(c,t));L(t##b2a,t)(L(l,t),F2(c,t));L(t##b2b,t)(L(l,t),F2(c,t),L(r,t));L(t##b2c,t)(L(l,t),F2(c,t),L(r,t));
#define B2b(t) t t##b2(P(a,t),F2(c,t)){t r;LI(l,t);t i;for(i=a[0];i>0;--i){PS(l,t,a[i]);}l=t##b2a(l,c);r=l->v;PP(l,t);PRO("B2");return r;}L(t##b2a,t)(L(l,t),F2(c,t)){if(l->n==NULL){return l;}else{LI(r,t);return t##b2a(t##b2b(l,c,r),c);}}L(t##b2b,t)(L(l,t),F2(c,t),L(r,t)){if((l==NULL)&&(r->n==NULL)){return r;}else if(l==NULL){return t##b2c(r,c,l);}else if((l->n==NULL)&&(r==NULL)){return l;}else if(l->n==NULL){PS(r,t,l->v);PP(l,t);return t##b2c(r,c,l);}else{PS(r,t,(*c)(l->v,l->n->v));PP(l,t);PP(l,t);return t##b2b(l,c,r);}}L(t##b2c,t)(L(l,t),F2(c,t),L(r,t)){if((l==NULL)&&(r->n==NULL)){return r;}else if(l==NULL){return t##b2b(r,c,l);}else if((l->n==NULL)&&(r==NULL)){return l;}else if(l->n==NULL){PS(r,t,l->v);PP(l,t);return t##b2b(r,c,l);}else{PS(r,t,(*c)(l->n->v,l->v));PP(l,t);PP(l,t);return t##b2c(l,c,r);}}
#define DV0(t) t t##dv(t x,t y);
#define DV1(t) t t##dv(t x,t y){PRO("DV");return x/y;}
#define HW0 void VOhw();
#define HW1 void VOhw(){PRO("HW");}
#define INC0(t) t t##inc(t n);
#define INC1(t) t t##inc(t n){PRO("INC");return n+1;}
#define KP0(t) P(t##kp,t)(P(a,t),F1(f,t));
#define KP1(t) P(t##kp,t)(P(a,t),F1(f,t)){LI(l,t);t i;t c=0;for(i=a[0];i>0;--i){if((*f)(a[i])){PS(l,t,a[i]);++c;}}a[0]=c;for(i=1;i<=c;++i){a[i]=l->v;PP(l,t);}PRO("KP");return a;}
#define MP0(t) P(t##mp,t)(P(a,t),F1(f,t));
#define MP1(t) P(t##mp,t)(P(a,t),F1(f,t)){t i;for(i=a[0];i>0;--i){a[i]=(*f)(a[i]);}PRO("MP");return a;}
#define MU0(t) t t##mu(t x,t y);
#define MU1(t) t t##mu(t x,t y){PRO("MU");return x*y;}
#define PP0(t) L(t##pp,t)(t##ND *l);
#define PP1(t) L(t##pp,t)(t##ND *l){t##ND *r;r=l->n;free(l);PRO("PP");return r;}
#define PS0(t) L(t##ps,t)(t v,t##ND *l);
#define PS1(t) L(t##ps,t)(t v,t##ND *l){LI(r,t);r=(t##ND*)malloc(sizeof(t##ND));r->v=v;r->n=l;PRO("PS");return r;}
#define RD0(t) t t##rd(t f,t *a,F2(c,t));
#define RD1(t) t t##rd(t f,t *a,F2(c,t)){t p;a[a[0]]=(*c)(a[a[0]],f);for(p=a[0]-1;p>0;--p){a[p]=(*c)(a[p],a[p+1]);}PRO("RD");return a[1];}
#define RR0(t) P(t##rr,t)(t s);
#define RR1(t) P(t##rr,t)(t s){P(a,t);a=(t*)malloc((s+1)*sizeof(t));a[0]=s;PRO("RR");return a;}
#define SB0(t) t t##sb(t x,t y);
#define SB1(t) t t##sb(t x,t y){PRO("SB");return x-y;}
 
typedef char CH;
typedef unsigned char UC;
typedef signed char SC;
typedef short SH;
typedef unsigned short US;
typedef signed short SS;
typedef int IN;
typedef unsigned int UI;
typedef signed int SI;
typedef long LO;
typedef unsigned long LU;
typedef signed long LS;
typedef long long LL;
typedef unsigned long long UL;
typedef signed long long SL;
typedef float FL;
typedef double DB;
typedef long double LD;
typedef P(CHP,CH);
ND(CH)
ND(CHP)
 
UL PROSTART=0;
L(PROSEEN,CHP);
 
HW0
 
MP0(CH)
 
INC0(CH)
 
RR0(CH)
 
PS0(CH)
 
AD0(CH)
 
RD0(CH)
 
PP0(CH)
 
KP0(CH)
 
B2a(CH)
 
SB0(CH)
 
DV0(CH)
 
MU0(CH)
 
PS0(CHP)
 
PP0(CHP)
 
PP1(CHP)
 
PS1(CHP)
 
MU1(CH)
 
DV1(CH)
 
SB1(CH)
 
B2b(CH)
 
KP1(CH)
 
PP1(CH)
 
RD1(CH)
 
AD1(CH)
 
PS1(CH)
 
RR1(CH)
 
INC1(CH)
 
MP1(CH)
 
HW1
 
 
 
int main()
{
  PROFILE;
  UL j;
  for(j=1;j<22;++j)
  {
    DB x=1.000001;
    UL i;
    HW;
    for(i=1;i<7777777;++i)
    {
      if(x>2){HV(x);}
      SQ(x);
    }
    printf("%f",x);
    RR(a,CH,3);
    a[1]='H';
    a[2]='A';
    a[3]='L';
    MP(a,CH,inc);
    KP(a,CH,inc);
    printf(" %c%c%c ",a[1],a[2],a[3]);
    LI(list,CH);
    PS(list,CH,'Z');
    printf(" %c ",list->v);
    CH c;
    a[1]=4;
    a[2]=2;
    a[3]=1;
    B2(c,CH,a,ad);
    printf(" %d ",c);
    free(a);
    PP(list,CH);
    LI(sl,CHP);
    PS(sl,CHP,"zelah");
    printf(" %s ",sl->v);
    PP(sl,CHP);
    printf("\n\n");
  }
  return 0;
}
