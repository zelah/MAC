#include<stdio.h>
#include<stdlib.h>
#include<time.h>
 
#define ad(one,two) one=one+two
#define dv(one,two) one=one/two
#define h H()
#define hv(one) one=one/2
#define mp(array,type,function) type##MP(&type##function,array)
#define mu(one,two) one=one*two
#define sb(one,two) one=one-two
#define sq(one) one=one*one
#define tw(one) one=one+one
 
#define profile srand(time(NULL))
#define pro(string) pro1(string)
#define pro0(string)
#define pro1(string) printf(" :%d%s%d ",1/(rand()/(RAND_MAX/pro2)),string,(uc)(time(NULL)-(256*(time(NULL)/256))))
#define pro2 10000
 
#define ch char
#define uc unsigned char
#define sc signed char
#define sh short
#define us unsigned short
#define ss signed short
#define in int
#define ui unsigned int
#define si signed int
#define lo long
#define lu unsigned long
#define ls signed long
#define ll long long
#define ul unsigned long long
#define sl signed long long
#define fl float
#define db double
#define ld long double
 
#define F1(type,name) type (*name)(type)
#define P(type,name) type *name
 
#define H0 in H();
#define H1 in H(){pro("");return 0;}
#define INC0(type) type type##INC(type number);
#define INC1(type) type type##INC(type number){pro("INC");return ++number;}
#define MP0(type) type *type##MP(F1(type,function),P(type,array));
#define MP1(type) type *type##MP(F1(type,function),P(type,array)){type index;for(index=array[0];index>0;--index){array[index]=(*function)(array[index]);}pro("MP");return array;}
 
H0
 
MP0(uc)
 
INC0(uc)
 
INC1(uc)
 
MP1(uc)
 
H1
 
int main()
{
  profile;
  db number=1.1;
  ul index;
  h;
  for(index=1;index<999999999;++index)
  {
    sq(number);
  }
  printf("%f",number);
  uc string[4];
  string[0]=3;
  string[1]='H';
  string[2]='A';
  string[3]='L';
  mp(string,uc,INC);
  printf("%c%c%c",string[1],string[2],string[3]);
  return 0;
}
 
